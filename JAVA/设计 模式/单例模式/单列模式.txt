单例模式
1.特点：只能创建一个对象，也只有一块内存
2.实现方法：
	（1）将构造器私有
	（2）提供一个静态的成员变量来存放对象
	（3）提供一个获取单例的方法
饿汉模式代码：
public class SimpleClass {
	// 创建一个全局变量，用于存储类的对象
	private static SimpleClass simpleClass = new SimpleClass();

	//创建一个私有构造器，不能被外部访问
	private SimpleClass() {}
	
	public static SimpleClass getClassIntance() {
		return simpleClass;
	}
}

懒汉模式代码
public class SimpleClass {
	// 懒汉模式创建对象,将对象赋值为空
	private static  SimpleClass simpleClass = null;

	// 创建私有构造函数
	private SimpleClass() {

	}
	public static SimpleClass getSimpleClass() {
		if(simpleClass == null) {
			simpleClass = new SimpleClass();
		}
		return simpleClass;
	}
}

现象：
该类所创建的对象都公用一个内存

懒汉模式。饿汉模式：在多线程编程的时候会有区别
饿汉模式：在类初始化的时候就已经创建对象
懒汉模式：调用的时候再创建对象

饿汉式和懒汉式的区别：

1）饿汉式是空间换时间，懒汉式是空间换时间。

2）在多线程访问的时候，懒汉式可能会创建多个对象，而饿汉式不会。